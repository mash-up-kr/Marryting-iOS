//
//  MeetingListWorker.swift
//  
//
//  Created by 박건우 on 2022/08/06.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Models
import DataSource

protocol MeetingListWorkerProtocol {
    func fetchMeetings() async throws -> [Meeting]
}

final class MeetingListWorker: MeetingListWorkerProtocol {

    private let meetingListDataSource: MeetingListDataSourceProtocol
    private let userLocalDataSource: UserLocalDataSoureceProtocol

    init(meetingListDataSource: MeetingListDataSourceProtocol = MeetingListDataSource(),
         userLocalDataSource: UserLocalDataSoureceProtocol = UserLocalDataSourece()) {
        self.meetingListDataSource = meetingListDataSource
        self.userLocalDataSource = userLocalDataSource
    }

    func fetchMeetings() async throws -> [Meeting] {
        do {
            let dto = try await meetingListDataSource.getMeetingList(request: .init())
            guard let meetingListDTO = dto.data else { return [] }
            let meetingList = meetingListDTO.map(Meeting.init)
            print("--------- 결혼식 리스트 --------")
            print(meetingList)
            return meetingList
        }
        catch {
            return []
        }
    }
}

extension Meeting {
    init(_ dto: GetMeetingListDTO) {
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "yyyy-MM-dd"
        self.init(
            id: dto.weddingID,
            groomName: dto.groomName,
            brideName: dto.brideName,
            date: dateFormatter.date(from: dto.weddingDate) ?? Date()
        )
    }
}
