//
//  LoginViewController.swift
//  Login
//
//  Created by Woody on 2022/07/17.
//  Copyright (c) 2022 kr.mash-up. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import DesignSystem
import UIKit
import AuthenticationServices

import SnapKit

protocol LoginDisplayLogic: AnyObject {
    func alert()
    func alertFail()
}

public class LoginViewController: UIViewController, LoginDisplayLogic {
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: UI

    lazy var appleLoginButton: UIButton = {
        $0.setBackgroundImage(.create(.btn_apple_login), for: .normal)
        $0.addTarget(self, action: #selector(appleLoginButtonPressed), for: .touchUpInside)
        return $0
    }(UIButton(type: .system))

    @objc private func appleLoginButtonPressed() {
        interactor?.appleLogin()
    }

    func alert() {
        DispatchQueue.main.async {
            self.present(UIAlertController(title: "로그인 성공",
                                           message: nil,
                                           preferredStyle: .alert),
                         animated: true)
        }

    }

    func alertFail() {
        // TODO: 실패처리
    }

    // MARK: Routing
    
    public override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    public override func viewDidLoad() {
        super.viewDidLoad()
        self.setUI()
    }

    private func setUI() {
        self.view.addSubview(self.appleLoginButton)

        self.appleLoginButton.snp.makeConstraints { make in
            make.bottom.equalTo(self.view.safeAreaLayoutGuide).inset(40)
            make.leading.equalToSuperview().offset(24)
            make.trailing.equalToSuperview().inset(24)
        }
    }
}
