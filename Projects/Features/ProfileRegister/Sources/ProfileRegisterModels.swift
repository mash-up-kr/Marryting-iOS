//
//  ProfileRegisterModels.swift
//  ProfileRegister
//
//  Created by Yoojin Park on 2022/07/09.
//  Copyright (c) 2022 kr.mash-up. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Models

enum ProfileRegister
{
  // MARK: Use cases

    enum DidTapFirstPageNext {
        struct Request {
            var name: String
            var gender: String
            var birth: String
            var address: String
            var career: String
        }
    }

    enum FetchFirstPage {
        struct Response {
            var name: String
            var gender: Gender
            var birth: String
            var address: String
            var career: String
            var pageNumber: Int
        }

        struct ViewModel {
            var enterUserInfoViewModel: EnterUserInfoViewModel
            var pageNumber: Int
        }
    }

    enum DidTapImagePageNext {
        struct Response {
            var image: UIImage
        }

        struct ViewModel {

        }
    }

    enum FetchImagePage {
        struct Response {
            var images: [UIImage]
            var pageNumber: Int
        }

        struct ViewModel {
            var images: [UIImage]
            var pageNumber: Int
        }
    }

    enum FetchKeywordPage {

        struct Response {
            var keywords: [Keyword]
            var selectedKeywords: [Keyword]
            var pageNumber: Int
        }

        struct ViewModel {
            var keywords: [Keyword]
            var selectedKeywords: [Keyword]
            var pageNumber: Int
        }
    }

    enum UploadImage {
        struct Request {
            var image: UIImage
        }
        struct Response {
            var image: UIImage
        }
        struct ViewModel {
            var image: UIImage
        }
    }

    enum SelectKeywords {
        struct Request {
            var keywords: [SelectTagListKeywordModel]
        }
        struct Response {
            var keywords: [Keyword]
        }
        struct ViewModel {
            var selectedKeywords: [SelectTagListKeywordModel]
        }
    }
    enum DidTapKeywordPageNext {
        struct Response {
            
        }

        struct ViewModel {

        }
    }

    enum FetchQuestionPage {
        struct Response {

        }

        struct ViewModel {

        }
    }

    enum DidTapQuestionPageNext {
        struct Response {

        }

        struct ViewModel {

        }
    }

    enum RegisterProfile {
        struct Request {

        }

        struct Response {

        }

        struct ViewModel {

        }
    }
}

//struct CreateProfileRequestDTO {
//    var name: String
//    var gender: String
//    var birth: String
//    var address: String
//    var career: String
//    var answers: [Answer]
//    var keywords: [Keyword]
//    var pictures: [UIImage]
//
//    init(name: String = "", gender: String = "", birth: String = "", address: String = "", career: String = "", answers: [Answer] = [], keywords: [Keyword] = [], pictures: [UIImage] = []) {
//        self.name = name
//        self.gender = gender
//        self.birth = birth
//        self.address = address
//        self.career = career
//        self.answers = answers
//        self.keywords = keywords
//        self.pictures = pictures
//    }
//}
//
//struct UserInfo {
//    var name: String
//    var gender: String
//    var birth: String
//    var address: String
//    var career: String
//    
//    init(name: String = "", gender: String = "", birth: String = "", address: String = "", career: String = "") {
//        self.name = name
//        self.gender = gender
//        self.birth = birth
//        self.address = address
//        self.career = career
//    }
//}
