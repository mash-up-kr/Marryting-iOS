//
//  SplashViewController.swift
//  
//
//  Created by Woody on 2022/08/23.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import DesignSystem
import SnapKit
import SplashRoutingProtocol
import SplashRouter
import Lottie

protocol SplashDisplayLogic: AnyObject {
    func displayLogin()
    func displayMeetingList()
}

public final class SplashViewController: UIViewController, SplashDisplayLogic {
    var interactor: SplashBusinessLogic?
    public var router: (SplashRoutingLogic & SplashDataPassing)?
    
    // MARK: Object lifecycle
    
    public override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    public required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = SplashInteractor()
        let presenter = SplashPresenter()
        let router = SplashRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: UI

//    lazy var titleLabel: UILabel = {
//        let v = UILabel()
//        v.text = "MARRY-TING"
//        v.font = .montserrat(weight: .bold, size: ._30)
//        v.textColor = Pallete.Light.white.color
//        return v
//    }()

    lazy var animationView: UIImageView = {
        let v = UIImageView(frame: .init(x: 0, y: 0, width: UIScreen.main.bounds.width, height: UIScreen.main.bounds.width))
        guard let path = Bundle.module.path(forResource: "splash", ofType: "gif") else {
            fatalError("Gif does not exist at that path")
        }
        let url = URL(fileURLWithPath: path)
        guard let gifData = try? Data(contentsOf: url),
              let source =  CGImageSourceCreateWithData(gifData as CFData, nil) else {
            fatalError("Gif does not exist at that path")
        }
        var images = [UIImage]()
        let imageCount = CGImageSourceGetCount(source)
        for i in 0 ..< imageCount {
            if let image = CGImageSourceCreateImageAtIndex(source, i, nil) {
                images.append(UIImage(cgImage: image))
            }
        }
        v.animationImages = images
        v.startAnimating()
        return v
    }()

    // MARK: View lifecycle
    
    public override func viewDidLoad() {
        super.viewDidLoad()
        setUI()
        animateSplash()
    }
    
    private func setUI() {
        self.view.backgroundColor = Pallete.Light.main300.color

        self.view.addSubview(self.animationView)

        self.animationView.snp.makeConstraints { make in
            make.centerX.equalToSuperview()
            make.centerY.equalToSuperview()
        }
    }

    private func animateSplash() {
        Timer.scheduledTimer(timeInterval: 2.3, target: self, selector: #selector(splashTimeOut), userInfo: nil, repeats: false)
    }

    @objc func splashTimeOut() {
        self.interactor?.fetchUser()
    }

    // MARK: Display Logic
    func displayLogin() {
        router?.routeToLoginViewController()
    }

    func displayMeetingList() {
        router?.routeToMeetingListViewController()
    }
}
