//
//  LikeRequestCompleteViewController.swift
//  
//
//  Created by 박건우 on 2022/07/20.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import DesignSystem
import SnapKit
import LikeRequestCompleteRoutingProtocol
import LikeRequestCompleteRouter
import Lottie

protocol LikeRequestCompleteDisplayLogic: AnyObject {
    func displayMyName(viewModel: LikeRequestComplete.FetchMyName.ViewModel)
}

public final class LikeRequestCompleteViewController: UIViewController, LikeRequestCompleteDisplayLogic {
    var interactor: LikeRequestCompleteBusinessLogic?
    public var router: (LikeRequestCompleteRoutingLogic & LikeRequestCompleteDataPassing)?
    
    // MARK: Object lifecycle
    
    public override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    public required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = LikeRequestCompleteInteractor()
        let presenter = LikeRequestCompletePresenter()
        let router = LikeRequestCompleteRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: UI
    
    lazy var animationView: AnimationView = {
        let v = AnimationView(name: "complete", bundle: .module)
        v.play()
        return v
    }()
    
    lazy var completeMessageLabel: UILabel = {
        let v = UILabel()
        var attributedText: NSMutableAttributedString = .init(string: "")
        attributedText.append(NSAttributedString(string: "Nice!\n", attributes: [
            .font: UIFont.h2(name: .montserrat), .foregroundColor: Pallete.Light.main300.color ?? UIColor.gray
        ]))
        attributedText.append(NSAttributedString(string: "Completed", attributes: [
            .font: UIFont.h2(name: .montserrat), .foregroundColor: Pallete.Light.grey800.color ?? UIColor.gray
        ]))
        v.attributedText = attributedText
        v.numberOfLines = 2
        return v
    }()
    
    lazy var completeSubMessageLabel: UILabel = {
        let v = UILabel()
        v.font = .h4()
        v.textColor = Pallete.Light.grey500.color
        v.numberOfLines = 2
        return v
    }()
    
    lazy var goToLikeSceneButton: MTButton = {
        let v = MTButton.create(.subLight)
        v.title = "나의 좋아요 보러가기"
        v.addTarget(self, action: #selector(didTapGoToLikeSceneButton), for: .touchUpInside)
        return v
    }()
    
    lazy var goToGuestListSceneButton: UILabel = {
        let v = UILabel()
        v.font = .h5()
        v.textColor = Pallete.Light.grey300.color
        v.text = "다른 분도 더 볼래요"
        v.isUserInteractionEnabled = true
        v.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(didTapGoToGuestListSceneButton)))
        return v
    }()
    
    // MARK: View lifecycle
    
    public override func viewDidLoad() {
        super.viewDidLoad()
        setUI()
        interactor?.fetchMyName()
    }
    
    private func setUI() {
        
        view.backgroundColor = .white
        
        view.addSubview(animationView)
        view.addSubview(completeMessageLabel)
        view.addSubview(completeSubMessageLabel)
        view.addSubview(goToLikeSceneButton)
        view.addSubview(goToGuestListSceneButton)
        
        animationView.snp.makeConstraints { make in
            make.top.equalTo(view.safeAreaLayoutGuide)
            make.leading.trailing.equalToSuperview()
            make.height.equalTo(animationView.snp.width)
        }
        completeMessageLabel.snp.makeConstraints { make in
            make.top.equalTo(animationView.snp.bottom).offset(32)
            make.leading.trailing.equalToSuperview().inset(32)
        }
        completeSubMessageLabel.snp.makeConstraints { make in
            make.top.equalTo(completeMessageLabel.snp.bottom).offset(10)
            make.leading.trailing.equalToSuperview().inset(32)
        }
        goToGuestListSceneButton.snp.makeConstraints { make in
            make.bottom.equalTo(view.safeAreaLayoutGuide).inset(40)
            make.centerX.equalToSuperview()
        }
        goToLikeSceneButton.snp.makeConstraints { make in
            make.bottom.equalTo(goToGuestListSceneButton.snp.top).offset(-8)
            make.height.equalTo(56)
            make.leading.trailing.equalToSuperview().inset(60)
        }
    }
    
    // MARK: Display Logic
    
    func displayMyName(viewModel: LikeRequestComplete.FetchMyName.ViewModel) {
        completeSubMessageLabel.text = "\(viewModel.name)님의 마음은\n메리팅이 잘 전달할게요"
    }
    
    @objc func didTapGoToLikeSceneButton() {
        router?.routeToMyGuestListScene()
    }
    
    @objc func didTapGoToGuestListSceneButton() {
        router?.routeToGuestListScene()
    }
}
