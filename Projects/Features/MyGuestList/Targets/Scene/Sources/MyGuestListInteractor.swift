//
//  MyGuestListInteractor.swift
//  
//
//  Created by Woody on 2022/07/17.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import MyGuestListRoutingProtocol
import Models

protocol MyGuestListBusinessLogic {
    func fetchMyLikeGuests()
    func fetchMatchingGuests()
}

final class MyGuestListInteractor: MyGuestListBusinessLogic, MyGuestListDataStore {
    var presenter: MyGuestListPresentationLogic?
    var worker: MyGuestListWorkerProtocol?

    // MARK: Data Store

    var myLikeGuests: [Guest] = []

    var matchingGuests: [MatchedGuest] = []

    var meetingId: Int?

    init(worker: MyGuestListWorkerProtocol = MyGuestListWorker()) {
        self.worker = worker
    }
    
    // MARK: Business Logic

    func fetchMyLikeGuests() {
        guard let worker = worker else {
            return
        }
        Task {
            do {
                let guests = try await worker.fetchMyLikeGuests(weddingID: meetingId ?? 1)
                self.myLikeGuests = guests
                presenter?.presentMyLikeGuests(response: .init(guests: guests))
            } catch {
                // TODO: 에러처리
            }
        }
    }

    func fetchMatchingGuests() {
        guard let worker = worker else {
            return
        }
        Task {
            do {
                let guests = try await worker.fetchMatchingGuests(weddingID: meetingId ?? 1)
                self.matchingGuests = guests
                presenter?.presentMatchingGuests(response: .init(guests: guests))
            } catch {
                // TODO: 에러처리
            }
        }
    }

    
}
