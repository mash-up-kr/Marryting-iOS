//
//  AuthCodeInteractor.swift
//  
//
//  Created by 박건우 on 2022/08/20.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import AuthCodeRoutingProtocol
import Models

protocol AuthCodeBusinessLogic {
    func requestWeddingCode(request: AuthCode.RequestWeddingCode.Request)
}

final class AuthCodeInteractor: AuthCodeBusinessLogic, AuthCodeDataStore {
    var presenter: AuthCodePresentationLogic?
    var worker: AuthCodeWorkerProtocol?
    
    init(worker: AuthCodeWorkerProtocol = AuthCodeWorker()) {
        self.worker = worker
    }
    
    // MARK: Business Logic
    
    func requestWeddingCode(request: AuthCode.RequestWeddingCode.Request) {
        guard let worker = worker else {
            return
        }
        Task {
            do {
                let weddingId = try await worker.requestWeddingCode(weddingCode: request.weddingCode)
                presenter?.presentWeddingCodeSuccess(response: .init(weddingId: weddingId))
            }
            catch {
                presenter?.presentWeddingCodeError(response: .init(message: "인증 코드가 존재하지 않습니다"))
            }
        }
    }
}
