//
//  AuthCodeViewController.swift
//  
//
//  Created by 박건우 on 2022/08/20.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import DesignSystem
import SnapKit
import AuthCodeRoutingProtocol
import AuthCodeRouter

protocol AuthCodeDisplayLogic: AnyObject {
    func displayWeddingCodeSuccess(viewModel: AuthCode.RequestWeddingCode.ViewModel.Success)
    func displayWeddingCodeError(viewModel: AuthCode.RequestWeddingCode.ViewModel.Error)
}

public final class AuthCodeViewController: UIViewController, AuthCodeDisplayLogic {
    var interactor: AuthCodeBusinessLogic?
    public var router: (AuthCodeRoutingLogic & AuthCodeDataPassing)?
    
    // MARK: Object lifecycle
    
    public override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    public required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = AuthCodeInteractor()
        let presenter = AuthCodePresenter()
        let router = AuthCodeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: UI
    
    lazy var headerImageView: UIImageView = {
        let v = UIImageView()
        v.image = .create(.img_header_code)
        return v
    }()
    
    lazy var titleLabel: UILabel = {
        let v = UILabel()
        var attributedText: NSMutableAttributedString = .init(string: "")
        attributedText.append(NSAttributedString(string: "인증코드", attributes: [
            .font: UIFont.h3(), .foregroundColor: Pallete.Light.subGreen.color ?? UIColor.white
        ]))
        attributedText.append(NSAttributedString(string: "를\n입력해주세요", attributes: [
            .font: UIFont.h3(), .foregroundColor: UIColor.white
        ]))
        v.attributedText = attributedText
        v.numberOfLines = 2
        return v
    }()
    
    lazy var subtitleLabel: UILabel = {
        let v = UILabel()
        v.font = .body1()
        v.textColor = Pallete.Light.grey300.color
        return v
    }()
    
    lazy var authCodeTextField: UserInfoTextField = {
        let v = UserInfoTextField()
        v.type = .authCode
        v.addTarget(self, action: #selector(textFieldDidChange), for: .editingChanged)
        return v
    }()

    lazy var leftButton: MTButton = {
        let button = MTButton.create(.mainSmallDark)
        button.title = "PRE"
        button.isEnabled = true
        button.addTarget(self, action: #selector(pressPrevButton(_:)), for: .touchUpInside)
        return button
    }()

    lazy var rightButton: MTButton = {
        let button = MTButton.create(.mainDark)
        button.title = "NEXT"
        button.addTarget(self, action: #selector(didTapRightButton), for: .touchUpInside)
        button.isEnabled = false
        return button
    }()
    
    // MARK: View lifecycle
    
    public override func viewDidLoad() {
        super.viewDidLoad()
        setUI()
        setNofification()
    }
    
    private func setUI() {
        self.view.backgroundColor = Pallete.Dark.background.color
        
        self.view.addSubview(self.headerImageView)
        self.view.addSubview(self.titleLabel)
        self.view.addSubview(self.subtitleLabel)
        self.view.addSubview(self.authCodeTextField)
        self.view.addSubview(self.leftButton)
        self.view.addSubview(self.rightButton)
        
        self.headerImageView.snp.makeConstraints { make in
            make.top.equalTo(self.view.safeAreaLayoutGuide).inset(46)
            make.leading.trailing.equalToSuperview()
        }
        
        self.titleLabel.snp.makeConstraints { make in
            make.top.equalTo(self.headerImageView.snp.bottom).offset(100)
            make.leading.equalToSuperview().inset(32)
        }
        
        self.subtitleLabel.snp.makeConstraints { make in
            make.top.equalTo(self.titleLabel.snp.bottom).offset(4)
            make.leading.equalToSuperview().inset(32)
        }
        
        self.authCodeTextField.snp.makeConstraints { make in
            make.top.equalTo(self.subtitleLabel.snp.bottom).offset(40)
            make.leading.trailing.equalToSuperview().inset(32)
            make.height.equalTo(79)
        }

        self.leftButton.snp.makeConstraints { make in
            make.leading.equalToSuperview().offset(32)
            make.bottom.equalToSuperview().inset(40)
            make.height.equalTo(56)
        }
        self.rightButton.snp.makeConstraints { make in
            make.trailing.equalToSuperview().offset(-32)
            make.bottom.equalToSuperview().inset(40)
            make.height.equalTo(56)
        }
    }
    
    private func setNofification() {
        NotificationCenter.default.addObserver(
            self,
            selector: #selector(self.keyboardWillShow),
            name: UIResponder.keyboardWillShowNotification,
            object: nil
        )
        NotificationCenter.default.addObserver(
            self,
            selector: #selector(self.keyboardWillHide),
            name: UIResponder.keyboardWillHideNotification,
            object: nil
        )
    }
    
    // MARK: Display Logic
    
    func displayWeddingCodeSuccess(viewModel: AuthCode.RequestWeddingCode.ViewModel.Success) {
        DispatchQueue.main.async {
            self.router?.routeToGuestListScene(weddingId: viewModel.weddingId)
        }
    }
    
    func displayWeddingCodeError(viewModel: AuthCode.RequestWeddingCode.ViewModel.Error) {
        DispatchQueue.main.async {
            let alertViewController = UIAlertController(
                title: "인증코드 오류",
                message: "\(viewModel.message)",
                preferredStyle: .alert)
            alertViewController.addAction(UIAlertAction(title: "다시 입력하기", style: .default, handler: nil))

            self.present(alertViewController, animated: true)
        }
    }

    @objc func pressPrevButton(_ sender: UIButton) {
        DispatchQueue.main.async { [weak self] in
            self?.router?.removeFromParent()
        }
    }

    @objc func didTapRightButton() {
        guard let weddingCode = authCodeTextField.text else {
            return
        }
        interactor?.requestWeddingCode(request: .init(weddingCode: weddingCode))
    }
    
    /// 배경 터치시 messageTextView 포커싱 해제
    public override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        super.touchesEnded(touches, with: event)
        self.authCodeTextField.resignFirstResponder()
    }
    
    /// 키보드 Show 시에 위치 조정
    @objc func keyboardWillShow(notification: NSNotification) {
        if let keyboardFrame: NSValue = notification.userInfo?[UIResponder.keyboardFrameEndUserInfoKey] as? NSValue {
            let keyboardRectangle = keyboardFrame.cgRectValue
            let keyboardHeight = keyboardRectangle.height
            
            UIView.animate(withDuration: 1.0, delay: 0, options: .curveEaseOut, animations: {
                self.headerImageView.snp.updateConstraints { make in
                    make.top.equalTo(self.view.safeAreaLayoutGuide).inset(46 - keyboardHeight)
                }
                self.leftButton.snp.updateConstraints { make in
                    make.bottom.equalToSuperview().inset(40 + keyboardHeight)
                }
                self.rightButton.snp.updateConstraints { make in
                    make.bottom.equalToSuperview().inset(40 + keyboardHeight)
                }
                self.view.layoutIfNeeded()
            })
        }
    }
    
    /// 키보드 Hide 시에 위치 조정
    @objc func keyboardWillHide(notification: NSNotification) {
        UIView.animate(withDuration: 1) {
            self.headerImageView.snp.updateConstraints { make in
                make.top.equalTo(self.view.safeAreaLayoutGuide).inset(46)
            }
            self.leftButton.snp.updateConstraints { make in
                make.bottom.equalToSuperview().inset(40)
            }
            self.rightButton.snp.updateConstraints { make in
                make.bottom.equalToSuperview().inset(40)
            }
            self.view.layoutIfNeeded()
        }
    }
    
    @objc func textFieldDidChange(_ textField: UITextField) {
        let text = textField.text ?? ""
        if text.count > 6 {
            textField.text = String(text.dropLast())
        }
        else if text.count == 6 {
            rightButton.isEnabled = true
        }
        else {
            rightButton.isEnabled = false
        }
        textField.text = textField.text?.uppercased()
    }
}
