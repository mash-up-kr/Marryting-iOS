//
//  GuestListWorker.swift
//  GuestList
//
//  Created by Gunoo on 2022/07/09.
//  Copyright (c) 2022 kr.mash-up. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Models
import DataSource

protocol GuestListWorkerProtocol {
    func fetchGuests() async throws -> [Guest]
}

class GuestListWorker: GuestListWorkerProtocol {
    
    private let guestListDataSource: GuestListDataSourceProtocol
    private let userDataSource: UserDataSoureceProtocol
    
    init(guestListDataSource: GuestListDataSourceProtocol = GuestListDataSource(),
         userDataSource: UserDataSoureceProtocol = UserDataSourece()) {
        self.guestListDataSource = guestListDataSource
        self.userDataSource = userDataSource
    }
    
    func fetchGuests() async throws -> [Guest] {
        do {
            let dto = try await guestListDataSource.getGuestList(request: .init())
            guard let guestListDTO = dto.data else { return [] }
            let guestList = guestListDTO.map(Guest.init)
            return guestList
        }
        catch {
            return []
        }
    }
}

extension Guest {
    
    init(_ dto: GetGuestResponseBody) {
        let user = User(id: dto.profileID,
                        name: dto.name,
                        gender: dto.gender == "MALE" ? .male : .female,
                        career: dto.career,
                        birth: .init(),
                        age: dto.age,
                        address: dto.address,
                        pictures: dto.profileURL,
                        answers: dto.answers.map { .init(questionID: $0.questionId, answer: $0.answer) },
                        keyword: dto.keywords.map { .init(id: $0.keywordID, keyword: $0.keyword) }
        )
        self.init(user: user, isLiked: false)
    }
}
