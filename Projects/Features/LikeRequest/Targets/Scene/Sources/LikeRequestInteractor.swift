//
//  LikeRequestInteractor.swift
//  LikeRequest
//
//  Created by Gunoo on 2022/07/16.
//  Copyright (c) 2022 kr.mash-up. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import LikeRequestRoutingProtocol
import Models
import UIKit

protocol LikeRequestBusinessLogic {
    func fetchIntroduceContents()
    func requestLike(request: LikeRequest.RequestLike.Request)
}

class LikeRequestInteractor: LikeRequestBusinessLogic, LikeRequestDataStore {
    var presenter: LikeRequestPresentationLogic?
    var worker: LikeRequestWorkerProtocol?
    
    var targetGuest: Guest?
    var weddingId: Int?

    init(worker: LikeRequestWorkerProtocol = LikeRequestWorker()) {
        self.worker = worker
    }
    
    // MARK: Business Logic
    
    func fetchIntroduceContents() {
        guard let worker = worker else {
            return
        }
        presenter?.presentIntroduceContents(response: .init(userName: worker.getMyName()))
    }
    
    func requestLike(request: LikeRequest.RequestLike.Request) {
        guard let worker = worker else {
            return
        }
        // TODO: 좋아요 요청 통신

        let receiverProfileId = targetGuest?.user.id ?? 0
        guard let weddingId = weddingId else {
            presenter?.presentLikeRequestError(response: .init(message: "좋아요 보내기 실패"))
            return
        }

        Task {
            do {

                print(weddingId)
                let _ = try await worker.requestLike(message: request.message, receiverProfileId: receiverProfileId, weddingId: weddingId)
                presenter?.presentLikeRequestSuccess()
            }
            catch {
                presenter?.presentLikeRequestError(response: .init(message: error.localizedDescription))
            }
        }
    }
}
